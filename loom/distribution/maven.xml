<?xml version="1.0"?>
<project default="main"
    xmlns:doc="doc"
    xmlns:j="jelly:core"
    xmlns:maven="jelly:maven"
    xmlns:define="jelly:define"
    xmlns:util="jelly:util"
    xmlns:ant="jelly:ant"
    xmlns:deploy="deploy"
    xmlns:archive="loom:archive"
    xmlns:wrapper="loom:wrapper">

    <define:taglib uri="loom:archive">
        <define:tag name="copy-deps">
            <j:if test="${projectDescriptor != null}">
                <maven:pom var="pom" projectDescriptor="${projectDescriptor}"/>
            </j:if>

            <j:set var="mavenRepoLocal" value='${context.getVariable("maven.repo.local")}'/>
            <j:forEach var="dep" items="${pom.dependencies}">
                <j:if test='${category.equals(dep.getProperty("category"))}'>
                    <j:set var="addDeps" value='true'/>
                </j:if>
            </j:forEach>

            <j:if test='${addDeps == "true" }'>
                <ant:mkdir dir="${todir}"/>
                <ant:copy todir="${todir}" flatten="true">
                    <ant:fileset dir="${mavenRepoLocal}">
                        <j:forEach var="dep" items="${pom.dependencies}">
                            <j:if test='${category.equals(dep.getProperty("category"))}'>
                                <ant:include name="${dep.artifactDirectory}/jars/${dep.artifact}"/>
                                <ant:include name="${dep.artifactDirectory}/licenses/${dep.artifactId}.license"/>
                            </j:if>
                        </j:forEach>
                    </ant:fileset>
                </ant:copy>
            </j:if>
        </define:tag>
        <define:tag name="deploy">
		    <deploy:artifact
	    	  artifact="${maven.build.dir}/${distribution}"
	      		  type="distributions"
	          assureDirectoryCommand="mkdir -p"
	      	  siteCommand="cd @deployDirectory@; chmod g+w ${distribution}; chgrp ${maven.remote.group} ${distribution}"
	    	/>
        </define:tag>
    </define:taglib>

    <define:taglib uri="loom:wrapper">
        <define:tag name="install">
	        <ant:mkdir dir="${wrapper.install.dir}"/>
	        <ant:mkdir dir="${maven.repo.local}/wrapper/distributions/"/>
	        <ant:setproxy proxyhost="${maven.proxy.host}" proxyport="${maven.proxy.port}"/>
	        <j:set var="distURL" value='${wrapper.url}'/>
	        <!-- *nix wrapper -->
	        <j:set var="distName" value='wrapper_${wrapper.nix}_${wrapper.version}'/>
	        <ant:get src="${distURL}/${distName}.tar.gz"
	            dest="${maven.repo.local}/wrapper/distributions/${distName}.tar.gz"
	            usetimestamp="true"
	            verbose="true"/>
	        <ant:gunzip src="${maven.repo.local}/wrapper/distributions/${distName}.tar.gz" 
	        		  dest="${wrapper.install.dir}"/>
	        <ant:untar src="${wrapper.install.dir}/${distName}.tar" dest="${wrapper.install.dir}"/>
	        <ant:copy todir="${wrapper.install.dir}">
				<ant:fileset dir="${wrapper.install.dir}/${distName}/bin">
	                <ant:include name="wrapper"/>
	                <ant:include name="realpath"/>
				</ant:fileset>        
				<ant:fileset dir="${wrapper.install.dir}/${distName}/lib">
	                <ant:include name="*.so"/>
	                <ant:include name="*.jar"/>
	                <ant:exclude name="*test.jar"/>
				</ant:fileset>        
	        </ant:copy>
	        <ant:copy file="${wrapper.install.dir}/${distName}/src/bin/sh.script.in"
	            tofile="${wrapper.install.dir}/${pom.artifactId}-wrapper.sh">
	            <ant:filterset>
	                <ant:filter token="app.name" value="${pom.artifactId}"/>
	                <ant:filter token="app.long.name" value="${pom.artifactId}"/>
	            </ant:filterset>
	        </ant:copy>
	        <ant:copy file="${wrapper.install.dir}/${distName}/src/bin/bash.script.in"
	            tofile="${wrapper.install.dir}/${pom.artifactId}-wrapper.bash">
	            <ant:filterset>
	                <ant:filter token="app.name" value="${pom.artifactId}"/>
	                <ant:filter token="app.long.name" value="${pom.artifactId}"/>
	            </ant:filterset>
	        </ant:copy>
	        <!-- win32 wrapper -->
	        <j:set var="distName" value='wrapper_win32_${wrapper.version}'/>
	        <ant:get src="${distURL}/${distName}.zip"
	            dest="${maven.repo.local}/wrapper/distributions/${distName}.zip"
	            usetimestamp="true"
	            verbose="true"/>
	        <ant:unzip src="${maven.repo.local}/wrapper/distributions/${distName}.zip" 
	        		  dest="${wrapper.install.dir}"/>
	        <ant:copy todir="${wrapper.install.dir}">
				<ant:fileset dir="${wrapper.install.dir}/${distName}/bin">
	                <ant:include name="*.exe"/>
				</ant:fileset>        
				<ant:fileset dir="${wrapper.install.dir}/${distName}/lib">
	                <ant:include name="*.dll"/>
	                <ant:include name="*.jar"/>
	                <ant:exclude name="*test.jar"/>
				</ant:fileset>        
	        </ant:copy>
	        <ant:copy file="${wrapper.install.dir}/${distName}/src/bin/App.bat.in"
	            tofile="${wrapper.install.dir}/${pom.artifactId}.bat"/>
	        <ant:copy file="${wrapper.install.dir}/${distName}/src/bin/InstallApp-NT.bat.in"
	            tofile="${wrapper.install.dir}/Install-${pom.artifactId}-NT.bat"/>
	        <ant:copy file="${wrapper.install.dir}/${distName}/src/bin/UninstallApp-NT.bat.in"
	            tofile="${wrapper.install.dir}/Uninstall-${pom.artifactId}-NT.bat"/>
        </define:tag>
    </define:taglib>

    <goal name="main">
    	<attainGoal name="build"/>
    </goal>
    
    <goal name="build">
        <j:set var="distDir" value='${maven.build.dir}/${maven.final.name}'/>
        <ant:mkdir dir="${distDir}/tools/lib"/>
        <ant:mkdir dir="${distDir}/container/lib"/>
        <ant:mkdir dir="${distDir}/lib"/>
        <archive:copy-deps todir="${distDir}/tools/lib" category="tools"/>
        <archive:copy-deps todir="${distDir}/container/lib" category="container"/>
        <archive:copy-deps todir="${distDir}/lib" category="shared"/>

        <ant:mkdir dir="${distDir}/conf"/>
        <ant:copy file="src/conf/kernel.xml" todir="${distDir}/conf"/>
        <ant:copy file="src/conf/wrapper.conf" todir="${distDir}/conf"/>
        <ant:copy todir="${distDir}/conf">
            <ant:fileset dir="deploy/conf">
                <ant:include name="*.xml"/>
            </ant:fileset>
        </ant:copy>

        <ant:mkdir dir="${distDir}/apps"/>
        <ant:copy todir="${distDir}/apps">
            <ant:fileset dir="deploy/apps">
                <ant:include name="*.sar"/>
            </ant:fileset>
        </ant:copy>

        <ant:mkdir dir="${distDir}/ext"/>
        <ant:copy todir="${distDir}/ext">
            <ant:fileset dir="deploy/ext">
                <ant:include name="*.jar"/>
            </ant:fileset>
            <ant:fileset dir="${wrapper.install.dir}">
                <ant:include name="*.jar"/>
                <ant:include name="*.so"/>
                <ant:include name="*.dll"/>
            </ant:fileset>
        </ant:copy>

        <ant:mkdir dir="${distDir}/lib"/>
        <ant:copy todir="${distDir}/lib">
            <ant:fileset dir="deploy/lib">
                <ant:include name="*.jar"/>
            </ant:fileset>
        </ant:copy>

        <ant:mkdir dir="${distDir}/bin"/>
        <ant:copy todir="${distDir}/bin">
            <ant:fileset dir="src/script"/>
        </ant:copy>
        <chmod file="${distDir}/bin/*.sh" perm="u+x"/>

        <ant:mkdir dir="${distDir}/work"/>

        <ant:copy file="${pom.getDependencyPath('loom:loom-launcher')}"
            tofile="${distDir}/bin/loom-launcher.jar"/>

        <ant:copy todir="${distDir}/bin">
            <ant:fileset dir="${wrapper.install.dir}">
                <ant:include name="wrapper"/>
                <ant:include name="*.exe"/>
                <ant:include name="*.sh"/>
                <ant:include name="*.bash"/>
                <ant:include name="*.bat"/>
                <ant:exclude name="*.jar"/>
                <ant:exclude name="*.so"/>
                <ant:exclude name="*.dll"/>
            </ant:fileset>
        </ant:copy>
        
	    <!-- Create a tar.gz file -->
	    <ant:tar longfile="gnu" tarfile="${maven.build.dir}/${maven.final.name}.tar">
	      <ant:tarfileset dir="${distDir}" prefix="${maven.final.name}"/>
	    </ant:tar>
	
	    <ant:gzip zipfile="${maven.build.dir}/${maven.final.name}.tar.gz"
	    	src="${maven.build.dir}/${maven.final.name}.tar" />
	    <ant:delete file="${maven.build.dir}/${maven.final.name}.tar"/>
	
	    <!-- Create a zip file -->
	    <ant:zip destfile="${maven.build.dir}/${maven.final.name}.zip">
	      <ant:zipfileset dir="${distDir}" prefix="${maven.final.name}"/>
	    </ant:zip>

    	<ant:copy todir="${maven.repo.local}/${pom.artifactDirectory}/distributions"
      		overwrite="true">
      		<ant:fileset dir="${maven.build.dir}">
      			<ant:include name="${maven.final.name}.tar.gz"/>
      			<ant:include name="${maven.final.name}.zip"/>
      		</ant:fileset>
        </ant:copy>
    </goal>

	
    <preGoal name="build">
        <wrapper:install/>    	
    </preGoal>

    <goal name="deploy">
        <archive:deploy distribution="${maven.final.name}.zip"/>
        <archive:deploy distribution="${maven.final.name}.tar.gz"/>
    </goal>

</project>

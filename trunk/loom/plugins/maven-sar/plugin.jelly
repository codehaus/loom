<?xml version="1.0"?>

<project xmlns:j="jelly:core"
    xmlns:ant="jelly:ant"
    xmlns:artifact="artifact"
    xmlns:license="license"
    xmlns:util="jelly:util">

    <j:set var="maven.sar.final.name" value="${pom.artifactId}.sar"/>
    <j:set var="logging" value="${context.getVariable('maven.sar.logging')}"/>

    <!--==================================================================-->
    <!-- Default goal : Builds a sar file                                 -->
    <!--==================================================================-->
    <goal name="sar" prereqs="sar:sar" description="Build a sar file"/>

    <!--==================================================================-->
    <!-- Setup Descriptor Tools                                           -->
    <!--==================================================================-->
    <goal name="sar:init"
        prereqs="dna:init"
        description="Setup Loom Descriptor Processing Tasks">

        <ant:mc_interceptorSet id="maven.loom.interceptors">
            <ant:interceptor
                name="org.jcontainer.loom.info.PhoenixAttributeInterceptor">
                <ant:classpath>
                    <ant:pathelement path="${plugin.dir}"/>
                </ant:classpath>
            </ant:interceptor>
        </ant:mc_interceptorSet>

        <ant:mc_addToInterceptorSet
            dest="maven.metaclass.interceptors"
            source="maven.loom.interceptors"/>
    </goal>

    <!--==================================================================-->
    <!-- Metagenerate descriptor files                                    -->
    <!--==================================================================-->
    <goal name="sar:metagenerate"
        prereqs="sar:init,metaclass:generate"
        description="Generate Loom Descriptor Files">
    </goal>

    <!--==================================================================-->
    <!-- Builds a sar file                                                -->
    <!--==================================================================-->
    <goal name="sar:sar" prereqs="jar:jar" description="Build a sar file">

        <ant:echo message="Building sar ${maven.sar.final.name}"/>
        <!-- Ensure maven.sar.build.dir exists -->
        <ant:mkdir dir="${maven.sar.build.dir}"/>
        <ant:jar destfile="${maven.sar.build.dir}/${maven.sar.final.name}">
        	<!-- Add Sar descriptor files to SAR-INF/ -->
        	<ant:zipfileset file="${maven.sar.assembly}" fullpath="SAR-INF/assembly.xml"/>
        	<ant:zipfileset file="${maven.sar.config}" fullpath="SAR-INF/config.xml"/>
        	<ant:zipfileset file="${maven.sar.environment}" fullpath="SAR-INF/environment.xml"/>
        	<j:if test="${!empty(logging)}">
        		<ant:zipfileset file="${logging}" prefix="SAR-INF/"/>
            </j:if>
            <!-- Add build artifacts -->
            <ant:lib dir="${maven.sar.build.dir}">
                <ant:include name="${maven.sar.lib.include}"/>
                <ant:exclude name="${maven.sar.lib.exclude}"/>
            </ant:lib>
            <!-- Add dependency artifacts -->
            <j:forEach var="artifact" items="${pom.artifacts}">
                <j:set var="dependency" value="${artifact.dependency}"/>
                <j:if test="${dependency.getProperty('sar.bundle')=='true'}">
                    <ant:lib dir="${maven.repo.local}/${dependency.artifactDirectory}/jars/">
                        <ant:include name="${dependency.artifact}"/>
                    </ant:lib>
                </j:if>
            </j:forEach>
            <!-- Add resources with targetPath = 'SAR-INF' -->
            <j:forEach var="resource" items="${pom.build.resources}">
                <ant:patternset id="maven.sar.resources.set">
                    <j:forEach var="include" items="${resource.includes}">
                        <ant:include name="${include}"/>
                    </j:forEach>
                    <j:forEach var="exclude" items="${resource.excludes}">
                        <ant:exclude name="${exclude}"/>
                    </j:forEach>
                </ant:patternset>
                <j:set var="directory" value='${resource.directory}'/>
                <j:if test="${directory == null}">
                    <j:set var="directory" value='${basedir}'/>
                </j:if>
                <j:set var="targetPath" value='${resource.targetPath}'/>
                <j:if test="${targetPath == 'SAR-INF'}">
                    <ant:echo message="Adding resources from directory ${directory} to ${targetPath}..."/>
                    <ant:zipfileset dir="${directory}" prefix="${targetPath}">
                        <ant:patternset refid="maven.sar.resources.set"/>
                    </ant:zipfileset>
                </j:if>
            </j:forEach>

            <j:set var="licenseFileName">
                <license:fileName/>
            </j:set>
            <util:file name="${licenseFileName}" var="licenseFile"/>
            <ant:metainf dir="${licenseFile.canonicalFile.parent}">
                <ant:include name="${licenseFile.canonicalFile.name}"/>
            </ant:metainf>

            <ant:manifest>
                <ant:attribute name="Built-By" value="${user.name}"/>
                <ant:section name="${pom.package}">
                    <ant:attribute name="Specification-Title" value="${pom.artifactId}"/>
                    <ant:attribute name="Specification-Version"
                        value="${pom.currentVersion}"/>
                    <ant:attribute name="Specification-Vendor"
                        value="${pom.organization.name}"/>
                    <ant:attribute name="Implementation-Title"
                        value="${pom.package}"/>
                    <ant:attribute name="Implementation-Version"
                        value="${pom.currentVersion}"/>
                    <ant:attribute name="Implementation-Vendor"
                        value="${pom.organization.name}"/>
                </ant:section>
            </ant:manifest>
        </ant:jar>

    </goal>

    <!--==================================================================-->
    <!-- Install the sar in the local repository                          -->
    <!--==================================================================-->
    <goal name="sar:install"
        prereqs="sar:sar"
        description="Install the sar in the local repository">

        <artifact:install
            artifact="${maven.sar.build.dir}/${maven.sar.final.name}"
            type="sar"
            project="${pom}"/>

    </goal>

    <!--==================================================================-->
    <!-- Install snapshot of the sar in the local repository              -->
    <!--==================================================================-->
    <goal name="sar:install-snapshot"
        prereqs="sar:sar"
        description="Install snapshot of the sar in the local repository">

        <artifact:install-snapshot
            artifact="${maven.sar.build.dir}/${maven.sar.final.name}"
            type="sar"
            project="${pom}"/>

    </goal>

    <!--==================================================================-->
    <!-- Deploy the sar to the remote repository                          -->
    <!--==================================================================-->
    <goal name="sar:deploy"
        prereqs="sar:sar"
        description="Deploy the sar to the remote repository">

        <artifact:deploy
            artifact="${maven.sar.build.dir}/${maven.sar.final.name}"
            type="sar"
            project="${pom}"/>

    </goal>

    <!--==================================================================-->
    <!-- Deploy snapshot of the sar to the remote repository              -->
    <!--==================================================================-->
    <goal name="sar:deploy-snapshot"
        prereqs="sar:sar"
        description="Deploy snapshot of the sar to the remote repository">

        <artifact:deploy-snapshot
            artifact="${maven.sar.build.dir}/${maven.sar.final.name}"
            type="sar"
            project="${pom}"/>

    </goal>

    <!--==================================================================-->
    <!-- Special no-op goal which can be used by other plugin which need  -->
    <!-- to get access to any of this plugin's property. This is          -->
    <!-- temporary, until we get explicit plugin dependencies.            -->
    <!--==================================================================-->
    <goal name="sar:load"/>

</project>

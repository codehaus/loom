<?xml version="1.0" encoding="iso-8859-1"?>
<document>
    <properties>
    <title>Guide - Architectural overview</title>


    <author email="leosimons@apache.org">Leo Simons</author>
  </properties>
    <body>
        <section name="Introduction">
            <p>
              This document briefly describes the Loom server architecture.
            </p>
        </section>
        <section name="Multiple Server Application hosting">
            <p>
                Loom hosts one or more server applications at the same time in the same Virtual machine.
            </p>
            <p>
                <strong>Loom layer diagram</strong>
            </p>
                <figure src="images/phoenix-layers.jpg" alt="Loom Layers"/>
            <p>
              Shown above are three hosted server applications.  A mail server that would implement
              multiple listeners for incoming and outgoing services (POP3, SMTP, IMAP etc).  Outlook,
              Eudora and other mail clients would be able to connect to the server.  As it happens,
              Apache has a project in progress called "James" that provides these services and Newsgroups.
              Also shown is a Web server.  That would respond to HTTP/HTTPS requests from similar standards
              based clients and be able to host it's own applications (web-apps and virtual websites). Lastly,
              and non-existant currently at Apache is an EJB Server.  This would be able to host it's own
              bean applications and might use the web server for it's HTTP needs.
            </p>
        </section>
        <section name="Packaging of a Server Application">
            <p>
                Loom application are distributed in a single archive.
            </p>
            <subsection name="Packaging in terms of blocks">
                <p>
                  Loom hosts server applications made up of blocks.  The blocks may depend on libraries
                  to function correctly.  The blocks are tied together with Assembly instructions and Configured
                  externally.
                </p>
                <p>
                    <strong>Loom application in block view</strong>
                </p>
                    <img src="../images/loom-app-block.jpg" alt="Loom App Block"/>
            </subsection>
            <subsection name="Packaging in terms of block jar files">
                <p>
                  The server application is entirely contained within one "sar" file.  Sar is "Server ARchive".
                  Each block is a jar file.  The dependant libraries are regular jars (placed
                  within a directory "SAR-INF/lib" insde the sar file).  The Assembly and configuration instructions
                  are in xml form and contained within a "SAR-INF" directory inside the sar file.
                </p>
                <img src="../images/loom-app-blockjars.jpg" alt="Loom application in block jar view"/>
            </subsection>
            <subsection name="FtpServer as a Loom application">
                <p>
                  FtpServer (part of the Avalon/Cornerstone project) is distributed in sar form.  Here is a
                  view of it's blocks.  It has no third party jars that it depends on.
                </p>
                <p>
                    <strong>FtpServer, a real Loom application</strong>
                </p>
                    <figure src="images/phoenix-app-ftpserver.jpg" alt="Loom App FtpServer"/>
            </subsection>
            <p>
              Notes - Loom does not limit the number of blocks that it allows in a sar file.  We have taksdefs for Apache's Ant
              tool for making sar files.  See the "Block Developers Guide" (left
              margin of this page) for more what/how/why.
            </p>
        </section>
    </body>
</document>
